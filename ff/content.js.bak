var repoData, sbeSettings, repoOptions;

if (document.readyState !== 'loading') {
  console.log('document is already ready, just execute code here');
  setListner();
} else {
  document.addEventListener('DOMContentLoaded', function () {
      console.log('document was not ready, place code here');
      setListner();
  });
}

function setListner() {
  console.log(`${setListner.name} fired. iframes:`, document.querySelectorAll('iframe').length);
  document.addEventListener('contextmenu', function(event) {
    console.log('Right-clicked element in main document:', event.target);
    _field = event.target;
  }, true);
}



document.addEventListener('click', function (event) {
  const pluginContainer = document.getElementById('my-plugin-sidebar');
  const searchIcon = document.querySelector('#searchBoxContainer img');
  if (event.target !== searchIcon) {
    hideSearchBox(event);
  }

  if (!pluginContainer) { return; }
  if (pluginContainer.contains(event.target)) { return; }
  if (window.innerWidth - pluginContainer.getBoundingClientRect().right < 0) {
    return;
  }

  if(repoOptions && repoOptions.closeOnClickOut){
    sbeSwapSidebarWithButton();
  }
}, true);

document.addEventListener('keyup', function (e) {
  if(e.key !== "Escape") {  return;  }

  const pluginContainer = document.getElementById('my-plugin-sidebar');
  if(!pluginContainer || typeof(pluginContainer.getBoundingClientRect) !== 'function'){
    return;
  }
  if (window.innerWidth - pluginContainer.getBoundingClientRect().right < 0) {
    return;
  }

  const activeEdit = pluginContainer.querySelector('.sbe-card-field-editable');
  if(activeEdit){  return;  }

  const expanded = pluginContainer.querySelectorAll('.sbe-card-expanded');
  if(expanded.length > 0){
    sbeColapseAllCardBodies();
    sbeRemoveCardEditableAttribute();
    expanded.forEach(el => {
      el.classList.remove('sbe-card-selected', 'sbe-card-expanded');
    })
    return;
  }

  sbeSwapSidebarWithButton();
}, true);

document.addEventListener('DOMContentLoaded', async function (e) {
  try {
    repoOptions = await getrepoOptions();
    const urls = repoOptions.allowedUrls.split(/[;,]+/).filter(Boolean);
    if(urls.length > 0 && !urls.some(el => el.indexOf(location.hostname) > -1)){ return; }
  } catch (err) {
    return;
  }

  Promise.all(sbeFetchStyles(['button.css', 'sidebar.css']))
  .then(res => {
    sbeFetchAndBuildSidebarContent(sbeInitSidebar);
    getJsonFromStorage();
    init();
  })
  .catch(error => {
    console.error('Error loading one or more styles:', error);
  });
});

function init() {
  sbeBuiltMainButton();
}

function sbeInitSidebar() {
  sbeMainInit();
  sbeAttachTonNewItemEvent();
  sbeFetchCardImgs();
  // sbeSetCardTitleBodyEvents();
  document.getElementById('sbeExportData').addEventListener('click', sbeExportData);
  document.getElementById('importedData').addEventListener('change', importedData);
  document.getElementById('sbeImportData').addEventListener('click', function () {
    const input = document.getElementById('importedData');
    input.click();
    document.querySelector('.sbe-dropdown-menu')?.classList.toggle('sbe-invisible');
  });
  document.getElementById('repoOptions').addEventListener('click', function(e) {
    browser.runtime.sendMessage({action: "openOptionsPage"});
  });
  populateData();
  sbeFetchEditRibbonImg();
}

function sbeAttachTonNewItemEvent() {
  const btnNewItem = document.getElementById('newItem');
  if (!btnNewItem) { return; }
  btnNewItem.addEventListener('click', newItemClicked);
}

function sbeBuiltMainButton() {
    var theMainButton = Object.assign(document.createElement('div'), {
      id: "my-plugin-button",
      className: "sbe-semi-sphere-button"
      // textContent: "IS"
    });

    const img = document.createElement('img');
    img.src = browser.runtime.getURL('img/robot.svg');
    img.classList.add('img-btn');
    theMainButton.appendChild(img);

    // document.body.insertAdjacentHTML('beforeend', theMainButton.outerHTML);
    document.body.appendChild(theMainButton);
    document.getElementById('my-plugin-button').addEventListener('click', function (e) {
      e.stopPropagation();
      sbeSwapButtonWithSidebar();
    }, true);
}

function sbeFetchAndBuildSidebarContent(sidebarLoadedCallback) {
  fetch(browser.runtime.getURL('sidebar.html'))
    .then(response => response.text())
    .then(data => {
      var theSideBar = Object.assign(document.createElement('div'), {
        id: "my-plugin-sidebar",
        className: "sbe-fixed-parent",
        innerHTML: data
      });
      document.body.appendChild(theSideBar);

      theSideBar.addEventListener('click', function (e) {
        const dropdownMenu = document.querySelector('.sbe-dropdown-menu');
        if (!dropdownMenu.contains(e.target) && !dropdownMenu.classList.contains('sbe-invisible')) {
          dropdownMenu.classList.add('sbe-invisible');
        }
      }, true);

      if (typeof (sidebarLoadedCallback) === 'function') {
        sidebarLoadedCallback();
      }
    })
    .catch(error => console.error('Error loading the HTML:', error));
}

function sbeFetchStyles(cssNames) {
  if (!cssNames) { return; }
  if(!Array.isArray(cssNames)){  cssNames = [cssNames];  }

  return cssNames.map(cssName =>
    fetch(browser.runtime.getURL(cssName))
      .then(response => response.text())
      .then(data => {
        const docHead = document.getElementsByTagName('head')[0];
        if (!docHead) {
          throw new Error('>>> head not found');
        }
        const styleElement = document.createElement('style');
        styleElement.innerHTML = data;
        styleElement.id = cssName.split('.')[0];
        docHead.appendChild(styleElement);
        return true;
      })
  );
}

function sbeFetchCardImgs() {
  const cards = document.querySelectorAll('.sbe-card-buttons');

  cards.forEach(card => {
    const cardButtons = card?.querySelectorAll('.sbe-card-btn');
    cardButtons?.forEach(btn => {
      btn.addEventListener('click', onRibbonButtonClick);
      sbeSetImg(btn);
    });
  });

  ['newItem', 'searchBoxContainer'].forEach(imgId => {
    const img = document.getElementById(imgId)?.querySelector('img');
    if (img) {
      img.src = browser.runtime.getURL(`img/${img.parentElement.id.replace('sbe', '').toLowerCase()}.svg`);
    }
  });
}

function sbeFetchEditRibbonImg() {
  const editRibbon = document.getElementById('editButtons');
  editRibbon.querySelectorAll('.sbe-edit-btn').forEach(btn => {
    btn.addEventListener('click', sbeOnEditRibbonButtonClick);
    sbeSetImg(btn);
  });
}

function sbeSetImg(el) {
  const name = el?.getAttribute('data-type')?.toLowerCase();
  const img = el?.querySelector('img');
  if (name && img) {
    img.src = browser.runtime.getURL(`img/${name}.svg`);
  }
}

function sbeSwapButtonWithSidebar() {
  var btn = document.getElementById('my-plugin-button');
  btn.classList.add('sbe-invisible');
  const slideElement = document.getElementById('my-plugin-sidebar');
  if (!slideElement) {
    return;
  }

  slideElement.style.right = slideElement.style.right !== '0px' ? '0' : '-100%';
}

var repoData, sbeSettings;

function getJsonFromStorage() {
  browser.storage.local.get(['data', 'settings'], function (result) {
    if (browser.runtime.lastError) {
      showMessage(browser.runtime.lastError.message, 'error');
    }

    if (result) {
      repoData = result?.data || [];
      sbeSettings = result?.settings || {};
    }

  });
}

function newItemClicked(e) {
  const emptyElement = document.querySelector('.sbe-empty-element');
  const areCardsEmpty = Object.keys(repoData).length < 1;
  if (!emptyElement.classList.contains('sbe-invisible')) {
    emptyElement.classList.add('sbe-invisible');
  }
  const mainContent = document.querySelector('.sbe-main-content');
  if (mainContent.classList.contains('sbe-invisible')) {
    mainContent.classList.remove('sbe-invisible');
  }
  const card = mainContent?.querySelector('.sbe-card');
  if (!card) {
    showMessage('No card found', 'error');
    return;
  }

  const newCard = sbeNormaliseCard(card.cloneNode(true));
  newCard.classList.add('sbe-card-selected', 'sbe-card-expanded');
  const newCardTitle = newCard.querySelector('.sbe-card-title');
  newCardTitle.setAttribute('contenteditable', 'true');
  newCardTitle.classList.add('sbe-card-field-editable');
  newCard.querySelector('.sbe-card-header').addEventListener('click', onCardHeaderClick);

  mainContent.appendChild(newCard);
  document.getElementById('editButtons').classList.remove('sbe-invisible');
  newCardTitle.focus();
}

function showMessage(message, type) {
  let msg = document.getElementById('feedbackMessage');
  if ((type || 'sbe-info')?.indexOf('sbe-') !== 0) {
    type = `sbe-${type}`;
  }

  if (msg.classList.contains('sbe-feedback-message-slide')) {
    msg.classList.remove('sbe-feedback-message-slide');
    setTimeout(() => { showMessage(message, type); }, 250);
    return;
  }

  msg.innerHTML = message;
  msg.classList.remove('sbe-success', 'sbe-error', 'sbe-info', 'sbe-warning');
  msg.classList.add('sbe-feedback-message-slide', type || 'sbe-info');
  setTimeout(() => {
    msg.classList.remove('sbe-feedback-message-slide');
  }, 3000);
}

function sbeUpdateData(objData, rebuild = true) {
  browser.storage.local.set({ "data": objData }, function () {
    if (browser.runtime.lastError) {
      showMessage(browser.runtime.lastError.message, 'error');
    } else {
      showMessage('Data saved.', 'success');
      if(rebuild) {
        populateData();
      }
    }
  });
}

function getrepoOptions() {
  return new Promise((resolve, reject) => {
    const defaults = {
      "allowedUrls": "",
      "closeOnClickOut": true,
      "closeOnCopy": true,
      "closeOnSendTo": false
    };
    browser.storage.sync.get('repoOptions', function(obj) {
      const repoOptions = Object.assign({}, defaults, obj.repoOptions);
      resolve(repoOptions);
    });
  });
}